@using Antelope.Data.ViewModels
@model IEnumerable<AccountViewModel>
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
@using (Html.BeginForm("Filter", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <span>Number of exceed limit accounts: </span>
        <span id="exceddAcc">0</span>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-offset-0 col-md-10">
                <label style="cursor:pointer" for="c1">Account Balance < Notifying Threshold</label>
                <input type="checkbox" name="c1" id="c1" />
            </div>
            <div class="col-md-offset-0 col-md-10">
                <label style="cursor:pointer" for="c2">Notifying Threshold < Account Balance < AutoAction Threshold</label>
                <input type="checkbox" name="c2" id="c2" />
            </div>
            <div class="col-md-offset-0 col-md-10">
                <label style="cursor:pointer" for="c3">Account Balance > AutoAction Threshold</label>
                <input type="checkbox" name="c3" id="c3" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-0 col-md-10">
                <input type="submit" value="Filter" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.AccountType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Number)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Balance)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NotifyThreshold)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AutoActionThreshold)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartEffectiveDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EndEffectiveDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NumberOfRetries)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MonitorPeriod)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BankName)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.AccountType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Number)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Balance)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NotifyThreshold)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AutoActionThreshold)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartEffectiveDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndEffectiveDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumberOfRetries)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MonitorPeriod)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BankName)
            </td>
        </tr>
    }

</table>

@section scripts {
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <script>
        //$.connection.hub.url = "http://localhost:8081/signalr";
        var chat = $.connection.myHub;
        $(function () {
            chat.client.addMessage = function (count) {
                $('#exceddAcc').html('<strong>' + count + '</strong>');
            };
            $.connection.hub.start().done(function () {
                //alert("connect to server successful");
            }).fail(function (data) {
                alert("connect to server failed");
            });
        });
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}
